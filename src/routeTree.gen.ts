/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as RegisterVerifyRouteImport } from './routes/register/verify'
import { Route as RegisterCompleteRouteImport } from './routes/register/complete'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterVerifyRoute = RegisterVerifyRouteImport.update({
  id: '/register/verify',
  path: '/register/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterCompleteRoute = RegisterCompleteRouteImport.update({
  id: '/register/complete',
  path: '/register/complete',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/register/complete': typeof RegisterCompleteRoute
  '/register/verify': typeof RegisterVerifyRoute
  '/register': typeof RegisterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/register/complete': typeof RegisterCompleteRoute
  '/register/verify': typeof RegisterVerifyRoute
  '/register': typeof RegisterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/register/complete': typeof RegisterCompleteRoute
  '/register/verify': typeof RegisterVerifyRoute
  '/register/': typeof RegisterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/register/complete'
    | '/register/verify'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/register/complete' | '/register/verify' | '/register'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/register/complete'
    | '/register/verify'
    | '/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  RegisterCompleteRoute: typeof RegisterCompleteRoute
  RegisterVerifyRoute: typeof RegisterVerifyRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/verify': {
      id: '/register/verify'
      path: '/register/verify'
      fullPath: '/register/verify'
      preLoaderRoute: typeof RegisterVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/complete': {
      id: '/register/complete'
      path: '/register/complete'
      fullPath: '/register/complete'
      preLoaderRoute: typeof RegisterCompleteRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  RegisterCompleteRoute: RegisterCompleteRoute,
  RegisterVerifyRoute: RegisterVerifyRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
